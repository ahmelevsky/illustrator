#target illustratorvar actionStr = [ "/version 3","/name [ 2","6d79","]","/isOpen 1","/actionCount 1","/action-1 {","/name [ 24","d0b2d18bd180d0b0d0b2d0bdd0b8d0b2d0b0d0bdd0b8d0b5","]","/keyIndex 1","/colorIndex 0","/isOpen 1","/eventCount 2","/event-1 {","/useRulersIn1stQuadrant 0","/internalName (ai_plugin_alignPalette)","/localizedName [ 24","d092d18bd180d0b0d0b2d0bdd0b8d0b2d0b0d0bdd0b8d0b5","]","/isOpen 0","/isOn 1","/hasDialog 0","/parameterCount 1","/parameter-1 {","/key 1954115685","/showInPalette -1","/type (enumerated)","/name [ 71","d093d0bed180d0b8d0b7d0bed0bdd182d0b0d0bbd18cd0bdd0bed0b520d0b2d1","8bd180d0b0d0b2d0bdd0b8d0b2d0b0d0bdd0b8d0b520d0bfd0be20d186d0b5d0","bdd182d180d183","]","/value 2","}","}","/event-2 {","/useRulersIn1stQuadrant 0","/internalName (ai_plugin_alignPalette)","/localizedName [ 24","d092d18bd180d0b0d0b2d0bdd0b8d0b2d0b0d0bdd0b8d0b5","]","/isOpen 0","/isOn 1","/hasDialog 0","/parameterCount 1","/parameter-1 {","/key 1954115685","/showInPalette -1","/type (enumerated)","/name [ 67","d092d0b5d180d182d0b8d0bad0b0d0bbd18cd0bdd0bed0b520d0b2d18bd180d0","b0d0b2d0bdd0b8d0b2d0b0d0bdd0b8d0b520d0bfd0be20d186d0b5d0bdd182d1","80d183","]","/value 5","}","}","}",].join("\n");   var actFileDestStr = Folder.desktop  + "/AlignAction.aia";                                                                 var f = new File(actFileDestStr);                                    f.open('w');                                    f.write(this.actionStr);                                    f.close();                                                                                         app.loadAction(f);  main();   app.unloadAction("my", '');                                 f.remove();       function main(){      var templFile = File.openDialog("Выберите template");      var suffix = 0;            if (templFile == null) {        alert ("Ничего не выбрано");        return;        }        var inFolder = Folder.selectDialog( 'Выберите папку в которой папки с материалами для копирования' );        var outFolder = Folder.selectDialog( 'Выберите папку куда сохранять' );        if ( inFolder == null || outFolder == null ) {           alert ("Вы не выбрали папки");        return;        }    var root_folders = []    readNewRootFolders(inFolder,root_folders);        for (b=0; b<root_folders.length; b++){    var items_packs = []    var folderContent = root_folders[b].getFiles();           for (var i=0;i<folderContent.length;i++){           //    if (i>places.length)        //        break;            if (folderContent[i] instanceof Folder )                items_packs.push(folderContent[i].getFiles("*.eps"));            }            var items_count = -1;    for (ic=0; ic<items_packs.length; ic++) {        if (items_count==-1 || items_packs[ic].length<items_count)            items_count = items_packs[ic].length;        }            for (j=0; j<items_count; j++) {           template = app.open(templFile);        var places = [];         for (g=1; g<100; g++) {            try {                places.push(template.pageItems.getByName("g" + g));                }            catch (exp){                break;                }        }     //ОСНОВНОЙ ЦИКЛ ВСТАВКИ МАТЕРИАЛОВ        for (i=0; i<Math.min(items_packs.length, places.length); i++) {                          template.selection = null;             places[i].selected = true;                 var tAB = template.artboards.add(places[i].geometricBounds);               var lastIndex = template.artboards.length-1;             template.fitArtboardToSelectedArt(lastIndex);              template.selection = null;                                        var material  = app.open(randomElementAndRemove(items_packs[i]));             app.executeMenuCommand("selectall");               app.copy();                          template.activate();             app.paste();                          var group = template.groupItems.add();                             group.name = "PlacedGroup" + i;             for ( s = 0; s < template.selection.length; s++ )                     template.selection[s].moveToEnd( group );                                       template.artboards.setActiveArtboardIndex(lastIndex);             group.selected = true;             $.sleep(2000);             app.doScript("выравнивание", "my",true);                            material.close(SaveOptions.DONOTSAVECHANGES);               tAB.remove();        }        var filePath = new File(outFolder.fsName+'/' + template.name.slice(0, -3) + '_' + (++suffix));           template.saveAs(filePath, saveAsEpsFile());          template.close(SaveOptions.DONOTSAVECHANGES);      }    }  }function randomElement(arr) {	return arr[Math.floor(Math.random() * arr.length)];}function randomElementAndRemove(arr) {    var num = Math.floor(Math.random() * arr.length);    var el = arr[num];     arr.splice(num, 1);	return el;}function readNewRootFolders(rootFolder, newRootFoldersList){      var fContent = rootFolder.getFiles();        for (var i=0;i<fContent.length;i++){               if (fContent[i] instanceof Folder )                 if (!isFolderInList(fContent[i].parent, newRootFoldersList) && checkFolderHasFilesOnly(fContent[i]))                     newRootFoldersList.push(fContent[i].parent);                 else                    readNewRootFolders(fContent[i], newRootFoldersList);    }}function isFolderInList(folder, list) {    var i;    for (i = 0; i < list.length; i++) {        if (list[i].absoluteURI === folder.absoluteURI) {            return true;        }    }    return false;}function checkFolderHasFilesOnly(folder){     var folderContent = folder.getFiles();        for (var i=0;i<folderContent.length;i++){               if (folderContent[i] instanceof Folder )               return false;            }     return true;    }function removeFolder(folder){    var removeFiles = folder.getFiles();          for(var a=0;a<removeFiles.length;a++){           if ((removeFiles[a] instanceof Folder ) && removeFiles[a].getFiles().length>0)             removeFolder(removeFiles[a]);         else               removeFiles[a].remove();          }          folder.remove();      }function saveAsEpsFile() {       var epsOptions = new EPSSaveOptions();       with (epsOptions) {               compatibility = Compatibility.ILLUSTRATOR10;    embedLinkedFiles = false;    includeDocumentThumbnails = false;    embedAllFonts = false;    saveMultipleArtboards = false;    cmykPostScript = false;   preview = EPSPreview.None;      }       return epsOptions;  }