var processFile = function (file, outputFolder, size) {    var fileName = file.match(/[^\/]*$/g)[0];    var fileBaseName = fileName.match(/^[^\.]*/g);    var doc = app.open(new File(file));    var outFile = outputFolder + "/" + fileBaseName + ".jpg";    var action = "resize-" + ("" + size) + "x";    app.doScript(action, "stock");    var jpegOpts = new ExportOptionsJPEG();    jpegOpts.antiAliasing = true;    jpegOpts.artBoardClipping = true;    jpegOpts.qualitySetting = 100;    jpegOpts.horizontalScale = 100 * (300 / 72);    jpegOpts.verticalScale = 100 * (300 / 72);    doc.exportFile(new File(outFile), ExportType.JPEG, jpegOpts);    doc.close(SaveOptions.DONOTSAVECHANGES);};var basePath = "~/Desktop";var dlg = new Window("dialog", "Export Jpeg");var addGroup = function () {    row = dlg.add("group", undefined, "");    row.orientation = "row";    row.alignment = [ScriptUI.Alignment.LEFT, ScriptUI.Alignment.TOP];    return row;};var row = addGroup();var inputDirSt = row.add("statictext", undefined, "Input directory:");inputDirSt.size = [100, 20];var inputDirEt = row.add("edittext", undefined, basePath);inputDirEt.size = [300, 20];var inputChooseBtn = row.add("button", undefined, "Choose ...");inputChooseBtn.onClick = function () { inputDirEt.text = Folder.selectDialog("Input Folder"); };row = addGroup();var outDirSt = row.add("statictext", undefined, "Output directory:");outDirSt.size = [100, 20];var outDirEt = row.add("edittext", undefined, basePath);outDirEt.size = [300, 20];var outChooseBtn = row.add("button", undefined, "Choose ...");outChooseBtn.onClick = function () { outDirEt.text = Folder.selectDialog("Output Folder"); };row = addGroup();var sizes = [2000, 1000, 500, 300];var sizeSt = row.add("statictext", undefined, "Export size:");sizeSt.size = [100, 20];var sizeList = row.add("dropdownlist", undefined, sizes);sizeList.selection = 1;dlg.update();var progBar = dlg.add("progressbar", undefined, 0, 100);progBar.size = [400, 10];var progLabel = dlg.add("statictext", undefined, "...");progLabel.size = [400, 20];row = addGroup();var cancelBtn = row.add("button", undefined, "Cancel", { name: "cancel" });cancelBtn.onClick = function () { dlg.close(); };var okBtn = row.add("button", undefined, "Export", { name: "ok" });okBtn.onClick = function () {    try {        var inputFolder = inputDirEt.text;        var outputFolder = outDirEt.text;        var inputFiles = new Folder(inputFolder).getFiles("*.eps");        var index = 0;        var total = inputFiles.length;        for (var _i = 0, inputFiles_1 = inputFiles; _i < inputFiles_1.length; _i++) {            var inputFile = inputFiles_1[_i];            index++;            progLabel.text = "Exporting " + index + " of " + total + ". " + inputFile;            progBar.value = index / total * 100;            dlg.update();            processFile(inputFile.absoluteURI, outputFolder, sizes[sizeList.selection.index]);        }        progLabel.text = "Done";        dlg.close();    }    catch (e) {        alert(e);    }};dlg.show();